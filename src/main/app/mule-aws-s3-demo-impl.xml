<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:secure-property-placeholder="http://www.mulesoft.org/schema/mule/secure-property-placeholder" xmlns:json="http://www.mulesoft.org/schema/mule/json" xmlns:context="http://www.springframework.org/schema/context" xmlns:vm="http://www.mulesoft.org/schema/mule/vm" xmlns:jms="http://www.mulesoft.org/schema/mule/jms" xmlns:validation="http://www.mulesoft.org/schema/mule/validation" xmlns:file="http://www.mulesoft.org/schema/mule/file" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:s3="http://www.mulesoft.org/schema/mule/s3" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/s3 http://www.mulesoft.org/schema/mule/s3/current/mule-s3.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/file http://www.mulesoft.org/schema/mule/file/current/mule-file.xsd
http://www.mulesoft.org/schema/mule/validation http://www.mulesoft.org/schema/mule/validation/current/mule-validation.xsd
http://www.mulesoft.org/schema/mule/jms http://www.mulesoft.org/schema/mule/jms/current/mule-jms.xsd
http://www.mulesoft.org/schema/mule/vm http://www.mulesoft.org/schema/mule/vm/current/mule-vm.xsd
http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-current.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.mulesoft.org/schema/mule/secure-property-placeholder http://www.mulesoft.org/schema/mule/secure-property-placeholder/current/mule-secure-property-placeholder.xsd">
    <s3:config name="Amazon_S3__Configuration" accessKey="${aws.user.accesskey}" secretKey="${aws.user.secretkey}" doc:name="Amazon S3: Configuration" connectionTimeout="20000" socketTimeout="20000">
        <reconnect count="3"/>
    </s3:config>
    
   <!--  <context:property-placeholder location="classpath:aws-config.properties"/> -->
    <secure-property-placeholder:config name="Secure_Property_Placeholder" encryptionAlgorithm="Blowfish" key="${mule.security.key}" location="classpath:aws-config.properties" doc:name="Secure Property Placeholder"/>
    <flow name="mule-aws-s3-buckets-create-flow">
        <json:json-to-object-transformer doc:name="JSON to Object"/>
        <set-variable variableName="bucketName" value="#[json:bucketName]" doc:name="Variable"/>
        <s3:create-bucket config-ref="Amazon_S3__Configuration" bucketName="#[flowVars.bucketName]" doc:name="Amazon S3" region="AP_TOKYO"/>
        <logger level="INFO" doc:name="Logger"/>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
payload]]></dw:set-payload>
        </dw:transform-message>
        <exception-strategy ref="AWS_S3_EXCEPTION_STRATEGY" doc:name="Reference Exception Strategy"/>
        <!-- when="#[exception.causeMatches('om.amazonaws..*Exception')]" -->
    </flow>
    <flow name="mule-aws-s3-buckets-list-flow">
        <s3:list-buckets config-ref="Amazon_S3__Configuration" doc:name="Amazon S3"/>
        <logger level="INFO" doc:name="Logger"/>
        <payload-type-filter expectedType="java.util.ArrayList" doc:name="Payload"/>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
payload]]></dw:set-payload>
        </dw:transform-message>
    </flow>
    <flow name="mule-aws-s3-bucket-create-object">
        <set-variable variableName="bucketID" value="#[message.inboundProperties.'http.uri.params'.bucketid]" doc:name="Variable"/>
        <set-payload value="#[Thread.currentThread().getContextClassLoader().getResourceAsStream('bids.txt')]" doc:name="Set Payload"/>
        <s3:create-object config-ref="Amazon_S3__Configuration" bucketName="#[flowVars.bucketID]" key="#[java.util.UUID.randomUUID().toString() + '.txt']" doc:name="Amazon S3"/>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
payload]]></dw:set-payload>
        </dw:transform-message>
        <exception-strategy ref="AWS_S3_EXCEPTION_STRATEGY" doc:name="Reference Exception Strategy"/>
    </flow>
    <flow name="mule-aws-s3-buckets-objects-list">
        <set-variable variableName="bucketID" value="#[message.inboundProperties.'http.uri.params'.bucketid]" doc:name="Variable"/>
        <s3:list-objects config-ref="Amazon_S3__Configuration" bucketName="#[flowVars.bucketID]" delimiter="/" doc:name="Amazon S3"/>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
payload]]></dw:set-payload>
        </dw:transform-message>
        <exception-strategy ref="AWS_S3_EXCEPTION_STRATEGY" doc:name="Reference Exception Strategy"/>
    </flow>
    <flow name="mule-aws-s3-buckets-object-info">
        <set-variable variableName="bucketID" value="#[message.inboundProperties.'http.uri.params'.bucketid]" doc:name="Variable"/>
        <set-variable variableName="objectid" value="#[message.inboundProperties.'http.uri.params'.objectid]" doc:name="Variable"/>
        <s3:get-object config-ref="Amazon_S3__Configuration" bucketName="#[flowVars.bucketID]" key="#[flowVars.objectid]" doc:name="Amazon S3"/>
        <validation:is-not-null value="#[payload.objectContent]" doc:name="Validation"/>
        <set-payload value="#[payload.objectContent]" encoding="UTF-8" mimeType="binary/octet-stream" doc:name="Set Payload"/>
        <request-reply doc:name="Request-Reply">
            <vm:outbound-endpoint exchange-pattern="one-way" path="/inbound" doc:name="VM"/>
            <vm:inbound-endpoint exchange-pattern="one-way" path="/outbound" doc:name="VM"/>
        </request-reply>
        <exception-strategy ref="AWS_S3_EXCEPTION_STRATEGY" doc:name="Reference Exception Strategy"/>
    </flow>
    <flow name="mule-aws-s3-buckets-object-data-sync" processingStrategy="queued-asynchronous">
        <vm:inbound-endpoint exchange-pattern="one-way" path="/inbound" doc:name="VM"/>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---

payload splitBy "\n"]]></dw:set-payload>
        </dw:transform-message>
        <collection-splitter enableCorrelation="ALWAYS" doc:name="Collection Splitter"/>
        <not-filter doc:name="Not">
            <expression-filter expression="#[payload == empty]"/>
        </not-filter>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload splitBy ';']]></dw:set-payload>
        </dw:transform-message>
        <logger level="INFO" doc:name="Logger"/>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
{
	"b_id": ((payload[1] splitBy '=')[1]),
	"amount": ((payload[0] splitBy '=')[1]) as :number
}]]></dw:set-payload>
        </dw:transform-message>
        <collection-aggregator timeout="60000" failOnTimeout="true"   tracking:enable-default-events="true" doc:name="Collection Aggregator"/>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
(payload groupBy $.b_id map {
	id: $.b_id[0],
	totalAmount: sum $.amount
}) orderBy $.id]]></dw:set-payload>
        </dw:transform-message>
        <vm:outbound-endpoint exchange-pattern="one-way" path="/outbound" doc:name="VM"/>
    </flow>
    <flow name="mule-aws-s3-buckets-object-delete-flow">
    	<set-variable variableName="bucketID" value="#[message.inboundProperties.'http.uri.params'.bucketid]" doc:name="Variable"/>
        <set-variable variableName="objectid" value="#[message.inboundProperties.'http.uri.params'.objectid]" doc:name="Variable"/>
        <s3:delete-object config-ref="Amazon_S3__Configuration" bucketName="#[flowVars.bucketID]" key="#[flowVars.objectid]" doc:name="Amazon S3"/>
         <logger level="INFO" doc:name="Logger"/>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
payload]]></dw:set-payload>
        </dw:transform-message>
        <exception-strategy ref="AWS_S3_EXCEPTION_STRATEGY" doc:name="Reference Exception Strategy"/>
    </flow>
    
    <catch-exception-strategy name="AWS_S3_EXCEPTION_STRATEGY">
        <set-property propertyName="http.status" value="500" doc:name="Property"/>
        <set-property propertyName="Content-type" value="application/json" doc:name="Property"/>
        <set-payload value="{&quot;message&quot;: &quot;#[(exception.getCause().getMessage()) == null ? exception.getMessage() : exception.getCause().getMessage()]&quot;}" doc:name="Set Payload"/>
    </catch-exception-strategy>
</mule>
